// –ú–æ–¥—É–ª—å –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ç–∞—Ä–∏–º–∏ –¥–∞–Ω–∏–º–∏
const LegacySupport = {
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    init() {
        console.log('üì¶ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Å—Ç–∞—Ä–∏—Ö –¥–∞–Ω–∏—Ö');
        
        // –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ä–æ–∫—ñ–≤, —É —è–∫–∏—Ö —î –∑–∞–ø–∏—Å–∏
        this.knownYears = new Set();
        
        // –î–æ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–∫
        this.knownYears.add(new Date().getFullYear());
        
        // –®—É–∫–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –º–∏–Ω—É–ª–∏—Ö —Ä–æ–∫—ñ–≤
        this.addScanYearsButton();
        
        // –î–æ–¥–∞—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∑–∞–ø–∏—Å—ñ–≤
        this.trackAppointmentLoading();
    },
    
    // –î–æ–¥–∞—î –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ —É –º–∏–Ω—É–ª–∏—Ö —Ä–æ–∫–∞—Ö
    addScanYearsButton() {
        const calendarHeader = document.querySelector('.calendar-header');
        
        if (!calendarHeader) return;
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–Ω–æ–ø–∫–∞ –≤–∂–µ —ñ—Å–Ω—É—î
        if (document.getElementById('scan-years-btn')) return;
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É
        const scanButton = document.createElement('button');
        scanButton.id = 'scan-years-btn';
        scanButton.className = 'calendar-nav-btn';
        scanButton.innerHTML = '<i class="fas fa-history"></i>';
        scanButton.title = '–°–∫–∞–Ω—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å–∏ –≤ –º–∏–Ω—É–ª–∏—Ö —Ä–æ–∫–∞—Ö';
        
        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó
        scanButton.addEventListener('click', () => {
            this.scanPreviousYears();
        });
        
        // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        const navContainer = calendarHeader.querySelector('.calendar-actions') || calendarHeader;
        navContainer.appendChild(scanButton);
    },
    
    // –°–∫–∞–Ω—É—î –∑–∞–ø–∏—Å–∏ –≤ –º–∏–Ω—É–ª–∏—Ö —Ä–æ–∫–∞—Ö
    async scanPreviousYears() {
        Toast.info('–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ —É –º–∏–Ω—É–ª–∏—Ö —Ä–æ–∫–∞—Ö...', '–ü—Ä–æ—Ü–µ—Å');
        
        // –ü–æ—Ç–æ—á–Ω–∞ –¥–∞—Ç–∞
        const currentDate = new Date(window.appState.selectedDate);
        const day = currentDate.getDate();
        const month = currentDate.getMonth() + 1;
        
        try {
            // –ó–∞–ø–∏—Ç—É—î–º–æ API –¥–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤ –Ω–∞ —Ü–µ–π –¥–µ–Ω—å —É –≤—Å—ñ—Ö —Ä–æ–∫–∞—Ö
            const appointments = await apiClient.searchAppointmentsByDayMonth(day, month);
            
            if (appointments.length > 0) {
                // –ó–±–∏—Ä–∞—î–º–æ —Ä–æ–∫–∏ –∑ —É—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤
                const years = appointments.map(app => new Date(app.time).getFullYear());
                
                // –î–æ–¥–∞—î–º–æ –≤—Å—ñ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Ä–æ–∫–∏ –¥–æ –≤—ñ–¥–æ–º–∏—Ö —Ä–æ–∫—ñ–≤
                years.forEach(year => this.knownYears.add(year));
                
                // –û–Ω–æ–≤–ª—é—î–º–æ —Å–µ–ª–µ–∫—Ç–æ—Ä —Ä–æ–∫—ñ–≤
                this.updateYearSelector();
                
                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                const uniqueYears = [...new Set(years)].sort();
                const yearsText = uniqueYears.join(', ');
                
                if (uniqueYears.length > 0) {
                    Toast.success(`–ó–Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–∏ –Ω–∞ ${day}.${month} –≤ —Ä–æ–∫–∞—Ö: ${yearsText}`, '–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
                } else {
                    Toast.info('–ó–∞–ø–∏—Å—ñ–≤ —É —ñ–Ω—à–∏—Ö —Ä–æ–∫–∞—Ö –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', '–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
                }
            } else {
                Toast.info('–ó–∞–ø–∏—Å—ñ–≤ —É —ñ–Ω—à–∏—Ö —Ä–æ–∫–∞—Ö –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', '–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –º–∏–Ω—É–ª–∏—Ö —Ä–æ–∫—ñ–≤:', error);
            Toast.error('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–∞–Ω—É–≤–∞—Ç–∏ –º–∏–Ω—É–ª—ñ —Ä–æ–∫–∏. ' + error.message);
        }
    },
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ —Ä–æ–∫—ñ–≤
    updateYearSelector() {
        const yearSelector = document.getElementById('year-selector');
        
        if (!yearSelector) return;
        
        // –ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
        const currentValue = parseInt(yearSelector.value);
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—ñ –æ–ø—Ü—ñ—ó
        const years = [...this.knownYears].sort((a, b) => b - a); // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º
        
        // –û—á–∏—â–∞—î–º–æ —Å–µ–ª–µ–∫—Ç–æ—Ä
        yearSelector.innerHTML = '';
        
        // –î–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –æ–ø—Ü—ñ—ó
        years.forEach(year => {
            const option = document.createElement('option');
            option.value = year;
            option.textContent = year;
            yearSelector.appendChild(option);
        });
        
        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –≤–∏–±—Ä–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
        yearSelector.value = currentValue;
    },
    
    // –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ –¥–∞—Ç–∞–º–∏
    trackAppointmentLoading() {
        // –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ API
        const originalGetAppointments = apiClient.getAppointmentsByDate;
        
        // –ó–∞–º—ñ–Ω—é—î–º–æ –π–æ–≥–æ –≤–ª–∞—Å–Ω–æ—é —Ñ—É–Ω–∫—Ü—ñ—î—é
        apiClient.getAppointmentsByDate = async (date) => {
            try {
                const result = await originalGetAppointments.call(apiClient, date);
                
                // –Ø–∫—â–æ –æ—Ç—Ä–∏–º–∞–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –¥–æ–¥–∞—î–º–æ —Ä—ñ–∫ –¥–æ –≤—ñ–¥–æ–º–∏—Ö —Ä–æ–∫—ñ–≤
                if (result && result.length > 0) {
                    const dateObj = new Date(date);
                    this.knownYears.add(dateObj.getFullYear());
                }
                
                return result;
            } catch (error) {
                // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å —Ä–æ–∫—É
                if (error.message && error.message.includes('year')) {
                    Toast.warning('–ú–æ–∂–ª–∏–≤–æ, –∑–∞–ø–∏—Å –º–∞—î –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ä—ñ–∫. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ä—ñ–∫ —É —Å–µ–ª–µ–∫—Ç–æ—Ä—ñ.', '–ü—ñ–¥–∫–∞–∑–∫–∞');
                }
                throw error;
            }
        };
    }
};

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        LegacySupport.init();
    }, 1000); // –ó–∞—Ç—Ä–∏–º–∫–∞, —â–æ–± –ø–µ—Ä–µ–∫–æ–Ω–∞—Ç–∏—Å—è, —â–æ —ñ–Ω—à—ñ –º–æ–¥—É–ª—ñ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ
});