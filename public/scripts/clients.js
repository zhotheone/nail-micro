// –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏
const Clients = {
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    init() {
        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
        this.initClientListHandlers();
    },
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
    initClientListHandlers() {
        // –î–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –¥–ª—è —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
        const clientsList = document.getElementById('clients-list');
        
        if (!clientsList) return;
        
        clientsList.addEventListener('click', async (e) => {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–ª—ñ–∫ –±—É–≤ –ø–æ –∫–Ω–æ–ø—Ü—ñ –¥—ñ—ó
            const button = e.target.closest('.action-btn');
            
            if (!button) return;
            
            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –¥—ñ—é
            const clientId = button.getAttribute('data-id');
            const action = button.getAttribute('data-action');
            
            // –í–∏–∫–æ–Ω—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥—ñ—é
            if (action === 'edit-client') {
                await this.openEditClientModal(clientId);
            } else if (action === 'book-client') {
                await Modals.openBookingModalForClient(clientId);
            } else if (action === 'delete-client') {
                await this.deleteClient(clientId);
            }
        });
    },
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
    async loadClients() {
        const clientsList = document.getElementById('clients-list');
        
        if (!clientsList) return;
        
        try {
            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            clientsList.innerHTML = '<div class="loader"></div>';
            
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            window.appState.loading.clients = true;
            
            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ —á–µ—Ä–µ–∑ API
            const clients = await apiClient.getClients();
            window.appState.clients = clients;
            
            // –†–µ–Ω–¥–µ—Ä—ñ–Ω–≥ —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
            this.renderClientsList();
            
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            window.appState.loading.clients = false;
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
            clientsList.innerHTML = `
                <div class="error-message">
                    –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤: ${error.message}
                </div>
            `;
            window.appState.loading.clients = false;
        }
    },
    
    // –†–µ–Ω–¥–µ—Ä—ñ–Ω–≥ —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
    renderClientsList() {
        const clientsList = document.getElementById('clients-list');
        
        // –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫—É
        clientsList.innerHTML = '';
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª—ñ—î–Ω—Ç—ñ–≤
        if (!window.appState.clients || window.appState.clients.length === 0) {
            clientsList.innerHTML = `
                <div class="empty-state">
                    <i class="fas fa-users"></i>
                    <h3>–ù–µ–º–∞—î –∫–ª—ñ—î–Ω—Ç—ñ–≤</h3>
                    <p>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "+" —â–æ–± –¥–æ–¥–∞—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞</p>
                </div>
            `;
            return;
        }
        
        // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º
        const sortedClients = [...window.appState.clients].sort((a, b) => {
            return (a.name + ' ' + a.surName).localeCompare(b.name + ' ' + b.surName);
        });
        
        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ—à—É–∫—É
        const searchContainer = document.createElement('div');
        searchContainer.className = 'search-container';
        searchContainer.innerHTML = `
            <div class="form-group">
                <input type="search" id="client-search" class="form-control" placeholder="–ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤...">
            </div>
        `;
        
        clientsList.appendChild(searchContainer);
        
        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
        const listContainer = document.createElement('div');
        listContainer.id = 'clients-list-container';
        
        // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –¥–æ —Å–ø–∏—Å–∫—É
        sortedClients.forEach(client => {
            // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–π—Ç–∏–Ω–≥—É –∑—ñ—Ä–æ–∫
            let stars = '';
            for (let i = 1; i <= 5; i++) {
                stars += i <= client.trustRating ? '‚òÖ' : '‚òÜ';
            }
            
            const clientElement = document.createElement('div');
            clientElement.className = 'list-item';
            clientElement.setAttribute('data-name', `${client.name} ${client.surName}`);
            clientElement.setAttribute('data-phone', client.phoneNum);
            
            clientElement.innerHTML = `
                <div class="list-item-details">
                    <h3>${client.name} ${client.surName}</h3>
                    <p>üì± ${client.phoneNum}</p>
                    ${client.instagram ? `<p>üì∏ ${client.instagram}</p>` : ''}
                    <div class="trust-rating">${stars}</div>
                </div>
                <div class="list-item-actions">
                    <button class="action-btn btn-edit" data-id="${client._id}" data-action="edit-client">‚úèÔ∏è</button>
                    <button class="action-btn btn-confirm" data-id="${client._id}" data-action="book-client">üìù</button>
                    <button class="action-btn btn-cancel" data-id="${client._id}" data-action="delete-client">üóëÔ∏è</button>
                </div>
            `;
            
            listContainer.appendChild(clientElement);
        });
        
        clientsList.appendChild(listContainer);
        
        // –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ—à—É–∫—É
        const searchInput = document.getElementById('client-search');
        searchInput.addEventListener('input', this.filterClients);
    },
    
    // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –ø—Ä–∏ –ø–æ—à—É–∫—É
    filterClients() {
        const query = this.value.toLowerCase();
        const clientItems = document.querySelectorAll('#clients-list-container .list-item');
        
        clientItems.forEach(item => {
            const name = item.getAttribute('data-name').toLowerCase();
            const phone = item.getAttribute('data-phone').toLowerCase();
            
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Å–ø—ñ–≤–ø–∞–¥–∞—î –∑–∞–ø–∏—Ç –∑ —ñ–º'—è–º –∞–±–æ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
            if (name.includes(query) || phone.includes(query)) {
                item.style.display = '';
            } else {
                item.style.display = 'none';
            }
        });
    },
    
    // –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
    async openEditClientModal(clientId) {
        try {
            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ ID
            const client = await apiClient.getClient(clientId);
            
            // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
            if (!document.getElementById('edit-client-modal')) {
                this.createEditClientModal();
            }
            
            // –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –¥–∞–Ω–∏–º–∏ –∫–ª—ñ—î–Ω—Ç–∞
            const form = document.getElementById('edit-client-form');
            form.querySelector('[name="id"]').value = client._id;
            form.querySelector('[name="name"]').value = client.name;
            form.querySelector('[name="surName"]').value = client.surName;
            form.querySelector('[name="phoneNum"]').value = client.phoneNum;
            form.querySelector('[name="instagram"]').value = client.instagram || '';
            form.querySelector('[name="trustRating"]').value = client.trustRating;
            
            // –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            Modals.open('edit-client-modal');
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞:', error);
            Toast.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞.');
        }
    },
    
    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
    createEditClientModal() {
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.id = 'edit-client-modal';
        
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <div class="modal-title">–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞</div>
                    <button class="modal-close">&times;</button>
                </div>
                <form id="edit-client-form">
                    <input type="hidden" name="id">
                    <div class="form-group">
                        <label class="form-label">–Ü–º'—è</label>
                        <input type="text" class="form-control" name="name" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">–ü—Ä—ñ–∑–≤–∏—â–µ</label>
                        <input type="text" class="form-control" name="surName" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                        <input type="tel" class="form-control" name="phoneNum" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Instagram</label>
                        <input type="text" class="form-control" name="instagram">
                    </div>
                    <div class="form-group">
                        <label class="form-label">–†–µ–π—Ç–∏–Ω–≥ –¥–æ–≤—ñ—Ä–∏</label>
                        <select class="form-control" name="trustRating">
                            <option value="5">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (5 –∑—ñ—Ä–æ–∫)</option>
                            <option value="4">‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ (4 –∑—ñ—Ä–∫–∏)</option>
                            <option value="3">‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ (3 –∑—ñ—Ä–∫–∏)</option>
                            <option value="2">‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ (2 –∑—ñ—Ä–∫–∏)</option>
                            <option value="1">‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ (1 –∑—ñ—Ä–∫–∞)</option>
                        </select>
                    </div>
                    <button type="submit" class="btn-primary">
                        <span class="btn-text">–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏</span>
                        <span class="btn-loader"></span>
                    </button>
                </form>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –¥–ª—è —Ñ–æ—Ä–º–∏
        const form = document.getElementById('edit-client-form');
        form.addEventListener('submit', this.handleEditClientSubmit.bind(this));
        
        // –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        modal.querySelector('.modal-close').addEventListener('click', () => {
            Modals.close('edit-client-modal');
        });
        
        // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                Modals.close('edit-client-modal');
            }
        });
    },
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Ñ–æ—Ä–º–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
    async handleEditClientSubmit(e) {
        e.preventDefault();
        
        try {
            // –§–æ—Ä–º–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
            const form = e.target;
            
            // –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏
            Forms.setFormLoading(form, true);
            
            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∏
            const formData = new FormData(form);
            const clientId = formData.get('id');
            
            // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –∫–ª—ñ—î–Ω—Ç–∞
            const clientData = {
                name: formData.get('name'),
                surName: formData.get('surName'),
                phoneNum: formData.get('phoneNum'),
                instagram: formData.get('instagram'),
                trustRating: parseInt(formData.get('trustRating'))
            };
            
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
            if (!clientData.name || !clientData.surName || !clientData.phoneNum) {
                Toast.error('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è.');
                Forms.setFormLoading(form, false);
                return;
            }
            
            // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ —á–µ—Ä–µ–∑ API
            await apiClient.updateClient(clientId, clientData);
            
            // –£—Å–ø—ñ—à–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            Toast.success('–ö–ª—ñ—î–Ω—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ.');
            
            // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            Modals.close('edit-client-modal');
            
            // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
            await this.loadClients();
            
            // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ–ª–µ–∫—Ç—ñ–≤ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏
            Forms.loadClientSelect('booking-client-select');
            Forms.loadClientSelect('edit-appointment-client');
            
            // –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏
            Forms.setFormLoading(form, false);
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞:', error);
            Toast.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞. ' + error.message);
            Forms.setFormLoading(e.target, false);
        }
    },
    
    // –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
    async deleteClient(clientId) {
        // –ó–∞–ø–∏—Ç –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
        if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—å–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞? –í—Å—ñ –π–æ–≥–æ –∑–∞–ø–∏—Å–∏ —Ç–∞–∫–æ–∂ –±—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ.')) return;
        
        try {
            // –ü–æ–∫–∞–∑—É—î–º–æ —Å–ø—ñ–Ω–µ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const button = document.querySelector(`.action-btn[data-id="${clientId}"][data-action="delete-client"]`);
            
            if (button) {
                button.innerHTML = `<div class="btn-loader"></div>`;
                button.disabled = true;
            }
            
            // –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
            await apiClient.deleteClient(clientId);
            
            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
            Toast.success('–ö–ª—ñ—î–Ω—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.');
            
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤
            await this.loadClients();
            
            // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ–ª–µ–∫—Ç—ñ–≤ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏
            Forms.loadClientSelect('booking-client-select');
            Forms.loadClientSelect('edit-appointment-client');
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞:', error);
            Toast.error(`–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞. ${error.message}`);
            
            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É
            const button = document.querySelector(`.action-btn[data-id="${clientId}"][data-action="delete-client"]`);
            
            if (button) {
                button.innerHTML = 'üóëÔ∏è';
                button.disabled = false;
            }
        }
    }
};